// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkCellEditorLayoutBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final EditText editor;

  @NonNull
  public final TextView summary;

  @NonNull
  public final TextView tips;

  @NonNull
  public final TextView title;

  private UxsdkCellEditorLayoutBinding(@NonNull View rootView, @NonNull EditText editor,
      @NonNull TextView summary, @NonNull TextView tips, @NonNull TextView title) {
    this.rootView = rootView;
    this.editor = editor;
    this.summary = summary;
    this.tips = tips;
    this.title = title;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkCellEditorLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.uxsdk_cell_editor_layout, parent);
    return bind(parent);
  }

  @NonNull
  public static UxsdkCellEditorLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editor;
      EditText editor = ViewBindings.findChildViewById(rootView, id);
      if (editor == null) {
        break missingId;
      }

      id = R.id.summary;
      TextView summary = ViewBindings.findChildViewById(rootView, id);
      if (summary == null) {
        break missingId;
      }

      id = R.id.tips;
      TextView tips = ViewBindings.findChildViewById(rootView, id);
      if (tips == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new UxsdkCellEditorLayoutBinding(rootView, editor, summary, tips, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
