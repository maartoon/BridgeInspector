// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import dji.v5.ux.accessory.DescSpinnerCell;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkWidgetRtkTypeSwitchBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final Button btnSetNetRtkInfo;

  @NonNull
  public final DescSpinnerCell cellCoordinateSystem;

  @NonNull
  public final DescSpinnerCell cellRtkType;

  @NonNull
  public final LinearLayout llRtkCustomDetailView;

  @NonNull
  public final EditText netRtkNtripHost;

  @NonNull
  public final EditText netRtkNtripMountpoint;

  @NonNull
  public final EditText netRtkNtripPort;

  @NonNull
  public final EditText netRtkNtripPwd;

  @NonNull
  public final EditText netRtkNtripUser;

  private UxsdkWidgetRtkTypeSwitchBinding(@NonNull View rootView, @NonNull Button btnSetNetRtkInfo,
      @NonNull DescSpinnerCell cellCoordinateSystem, @NonNull DescSpinnerCell cellRtkType,
      @NonNull LinearLayout llRtkCustomDetailView, @NonNull EditText netRtkNtripHost,
      @NonNull EditText netRtkNtripMountpoint, @NonNull EditText netRtkNtripPort,
      @NonNull EditText netRtkNtripPwd, @NonNull EditText netRtkNtripUser) {
    this.rootView = rootView;
    this.btnSetNetRtkInfo = btnSetNetRtkInfo;
    this.cellCoordinateSystem = cellCoordinateSystem;
    this.cellRtkType = cellRtkType;
    this.llRtkCustomDetailView = llRtkCustomDetailView;
    this.netRtkNtripHost = netRtkNtripHost;
    this.netRtkNtripMountpoint = netRtkNtripMountpoint;
    this.netRtkNtripPort = netRtkNtripPort;
    this.netRtkNtripPwd = netRtkNtripPwd;
    this.netRtkNtripUser = netRtkNtripUser;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkWidgetRtkTypeSwitchBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.uxsdk_widget_rtk_type_switch, parent);
    return bind(parent);
  }

  @NonNull
  public static UxsdkWidgetRtkTypeSwitchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_set_net_rtk_info;
      Button btnSetNetRtkInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnSetNetRtkInfo == null) {
        break missingId;
      }

      id = R.id.cell_coordinate_system;
      DescSpinnerCell cellCoordinateSystem = ViewBindings.findChildViewById(rootView, id);
      if (cellCoordinateSystem == null) {
        break missingId;
      }

      id = R.id.cell_rtk_type;
      DescSpinnerCell cellRtkType = ViewBindings.findChildViewById(rootView, id);
      if (cellRtkType == null) {
        break missingId;
      }

      id = R.id.ll_rtk_custom_detail_view;
      LinearLayout llRtkCustomDetailView = ViewBindings.findChildViewById(rootView, id);
      if (llRtkCustomDetailView == null) {
        break missingId;
      }

      id = R.id.net_rtk_ntrip_host;
      EditText netRtkNtripHost = ViewBindings.findChildViewById(rootView, id);
      if (netRtkNtripHost == null) {
        break missingId;
      }

      id = R.id.net_rtk_ntrip_mountpoint;
      EditText netRtkNtripMountpoint = ViewBindings.findChildViewById(rootView, id);
      if (netRtkNtripMountpoint == null) {
        break missingId;
      }

      id = R.id.net_rtk_ntrip_port;
      EditText netRtkNtripPort = ViewBindings.findChildViewById(rootView, id);
      if (netRtkNtripPort == null) {
        break missingId;
      }

      id = R.id.net_rtk_ntrip_pwd;
      EditText netRtkNtripPwd = ViewBindings.findChildViewById(rootView, id);
      if (netRtkNtripPwd == null) {
        break missingId;
      }

      id = R.id.net_rtk_ntrip_user;
      EditText netRtkNtripUser = ViewBindings.findChildViewById(rootView, id);
      if (netRtkNtripUser == null) {
        break missingId;
      }

      return new UxsdkWidgetRtkTypeSwitchBinding(rootView, btnSetNetRtkInfo, cellCoordinateSystem,
          cellRtkType, llRtkCustomDetailView, netRtkNtripHost, netRtkNtripMountpoint,
          netRtkNtripPort, netRtkNtripPwd, netRtkNtripUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
