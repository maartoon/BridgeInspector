// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.constraintlayout.widget.Barrier;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkViewSeekBarBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final View imageviewBaseline;

  @NonNull
  public final ImageView imageviewMinus;

  @NonNull
  public final ImageView imageviewPlus;

  @NonNull
  public final ImageView imageviewThumb;

  @NonNull
  public final ImageView imageviewTrack;

  @NonNull
  public final Barrier maxBarrier;

  @NonNull
  public final Barrier minBarrier;

  @NonNull
  public final TextView textviewMaxValue;

  @NonNull
  public final TextView textviewMinValue;

  @NonNull
  public final TextView textviewValue;

  private UxsdkViewSeekBarBinding(@NonNull View rootView, @NonNull View imageviewBaseline,
      @NonNull ImageView imageviewMinus, @NonNull ImageView imageviewPlus,
      @NonNull ImageView imageviewThumb, @NonNull ImageView imageviewTrack,
      @NonNull Barrier maxBarrier, @NonNull Barrier minBarrier, @NonNull TextView textviewMaxValue,
      @NonNull TextView textviewMinValue, @NonNull TextView textviewValue) {
    this.rootView = rootView;
    this.imageviewBaseline = imageviewBaseline;
    this.imageviewMinus = imageviewMinus;
    this.imageviewPlus = imageviewPlus;
    this.imageviewThumb = imageviewThumb;
    this.imageviewTrack = imageviewTrack;
    this.maxBarrier = maxBarrier;
    this.minBarrier = minBarrier;
    this.textviewMaxValue = textviewMaxValue;
    this.textviewMinValue = textviewMinValue;
    this.textviewValue = textviewValue;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkViewSeekBarBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.uxsdk_view_seek_bar, parent);
    return bind(parent);
  }

  @NonNull
  public static UxsdkViewSeekBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageview_baseline;
      View imageviewBaseline = ViewBindings.findChildViewById(rootView, id);
      if (imageviewBaseline == null) {
        break missingId;
      }

      id = R.id.imageview_minus;
      ImageView imageviewMinus = ViewBindings.findChildViewById(rootView, id);
      if (imageviewMinus == null) {
        break missingId;
      }

      id = R.id.imageview_plus;
      ImageView imageviewPlus = ViewBindings.findChildViewById(rootView, id);
      if (imageviewPlus == null) {
        break missingId;
      }

      id = R.id.imageview_thumb;
      ImageView imageviewThumb = ViewBindings.findChildViewById(rootView, id);
      if (imageviewThumb == null) {
        break missingId;
      }

      id = R.id.imageview_track;
      ImageView imageviewTrack = ViewBindings.findChildViewById(rootView, id);
      if (imageviewTrack == null) {
        break missingId;
      }

      id = R.id.max_barrier;
      Barrier maxBarrier = ViewBindings.findChildViewById(rootView, id);
      if (maxBarrier == null) {
        break missingId;
      }

      id = R.id.min_barrier;
      Barrier minBarrier = ViewBindings.findChildViewById(rootView, id);
      if (minBarrier == null) {
        break missingId;
      }

      id = R.id.textview_max_value;
      TextView textviewMaxValue = ViewBindings.findChildViewById(rootView, id);
      if (textviewMaxValue == null) {
        break missingId;
      }

      id = R.id.textview_min_value;
      TextView textviewMinValue = ViewBindings.findChildViewById(rootView, id);
      if (textviewMinValue == null) {
        break missingId;
      }

      id = R.id.textview_value;
      TextView textviewValue = ViewBindings.findChildViewById(rootView, id);
      if (textviewValue == null) {
        break missingId;
      }

      return new UxsdkViewSeekBarBinding(rootView, imageviewBaseline, imageviewMinus, imageviewPlus,
          imageviewThumb, imageviewTrack, maxBarrier, minBarrier, textviewMaxValue,
          textviewMinValue, textviewValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
