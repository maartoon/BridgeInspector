// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.Switch;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import dji.v5.ux.accessory.item.TitleValueCell;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkFpvTopBarWidgetGpsSignalPopoverRtkBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout gpsContentWrapper;

  @NonNull
  public final FrameLayout gpsTitleWrapper;

  @NonNull
  public final LinearLayout rtkContentWrapper;

  @NonNull
  public final FrameLayout rtkTitleWrapper;

  @NonNull
  public final Switch switchRtkEnable;

  @NonNull
  public final TitleValueCell tvGpsSatelliteCount;

  @NonNull
  public final TitleValueCell tvGpsSignal;

  @NonNull
  public final TitleValueCell tvRtkSatelliteCount;

  @NonNull
  public final TitleValueCell tvRtkSignal;

  @NonNull
  public final TitleValueCell tvRtkState;

  private UxsdkFpvTopBarWidgetGpsSignalPopoverRtkBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout gpsContentWrapper, @NonNull FrameLayout gpsTitleWrapper,
      @NonNull LinearLayout rtkContentWrapper, @NonNull FrameLayout rtkTitleWrapper,
      @NonNull Switch switchRtkEnable, @NonNull TitleValueCell tvGpsSatelliteCount,
      @NonNull TitleValueCell tvGpsSignal, @NonNull TitleValueCell tvRtkSatelliteCount,
      @NonNull TitleValueCell tvRtkSignal, @NonNull TitleValueCell tvRtkState) {
    this.rootView = rootView;
    this.gpsContentWrapper = gpsContentWrapper;
    this.gpsTitleWrapper = gpsTitleWrapper;
    this.rtkContentWrapper = rtkContentWrapper;
    this.rtkTitleWrapper = rtkTitleWrapper;
    this.switchRtkEnable = switchRtkEnable;
    this.tvGpsSatelliteCount = tvGpsSatelliteCount;
    this.tvGpsSignal = tvGpsSignal;
    this.tvRtkSatelliteCount = tvRtkSatelliteCount;
    this.tvRtkSignal = tvRtkSignal;
    this.tvRtkState = tvRtkState;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkFpvTopBarWidgetGpsSignalPopoverRtkBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UxsdkFpvTopBarWidgetGpsSignalPopoverRtkBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.uxsdk_fpv_top_bar_widget_gps_signal_popover_rtk, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UxsdkFpvTopBarWidgetGpsSignalPopoverRtkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gps_content_wrapper;
      LinearLayout gpsContentWrapper = ViewBindings.findChildViewById(rootView, id);
      if (gpsContentWrapper == null) {
        break missingId;
      }

      id = R.id.gps_title_wrapper;
      FrameLayout gpsTitleWrapper = ViewBindings.findChildViewById(rootView, id);
      if (gpsTitleWrapper == null) {
        break missingId;
      }

      id = R.id.rtk_content_wrapper;
      LinearLayout rtkContentWrapper = ViewBindings.findChildViewById(rootView, id);
      if (rtkContentWrapper == null) {
        break missingId;
      }

      id = R.id.rtk_title_wrapper;
      FrameLayout rtkTitleWrapper = ViewBindings.findChildViewById(rootView, id);
      if (rtkTitleWrapper == null) {
        break missingId;
      }

      id = R.id.switch_rtk_enable;
      Switch switchRtkEnable = ViewBindings.findChildViewById(rootView, id);
      if (switchRtkEnable == null) {
        break missingId;
      }

      id = R.id.tv_gps_satellite_count;
      TitleValueCell tvGpsSatelliteCount = ViewBindings.findChildViewById(rootView, id);
      if (tvGpsSatelliteCount == null) {
        break missingId;
      }

      id = R.id.tv_gps_signal;
      TitleValueCell tvGpsSignal = ViewBindings.findChildViewById(rootView, id);
      if (tvGpsSignal == null) {
        break missingId;
      }

      id = R.id.tv_rtk_satellite_count;
      TitleValueCell tvRtkSatelliteCount = ViewBindings.findChildViewById(rootView, id);
      if (tvRtkSatelliteCount == null) {
        break missingId;
      }

      id = R.id.tv_rtk_signal;
      TitleValueCell tvRtkSignal = ViewBindings.findChildViewById(rootView, id);
      if (tvRtkSignal == null) {
        break missingId;
      }

      id = R.id.tv_rtk_state;
      TitleValueCell tvRtkState = ViewBindings.findChildViewById(rootView, id);
      if (tvRtkState == null) {
        break missingId;
      }

      return new UxsdkFpvTopBarWidgetGpsSignalPopoverRtkBinding((LinearLayout) rootView,
          gpsContentWrapper, gpsTitleWrapper, rtkContentWrapper, rtkTitleWrapper, switchRtkEnable,
          tvGpsSatelliteCount, tvGpsSignal, tvRtkSatelliteCount, tvRtkSignal, tvRtkState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
