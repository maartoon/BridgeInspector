// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkWidgetCameraConfigStorageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final ImageView imageviewStorageIcon;

  @NonNull
  public final TextView textviewCameraColor;

  @NonNull
  public final TextView textviewImageFormat;

  @NonNull
  public final TextView textviewStatusCapacityTitle;

  @NonNull
  public final TextView textviewStatusCapacityValue;

  private UxsdkWidgetCameraConfigStorageBinding(@NonNull ConstraintLayout rootView,
      @NonNull Barrier barrier, @NonNull ImageView imageviewStorageIcon,
      @NonNull TextView textviewCameraColor, @NonNull TextView textviewImageFormat,
      @NonNull TextView textviewStatusCapacityTitle,
      @NonNull TextView textviewStatusCapacityValue) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.imageviewStorageIcon = imageviewStorageIcon;
    this.textviewCameraColor = textviewCameraColor;
    this.textviewImageFormat = textviewImageFormat;
    this.textviewStatusCapacityTitle = textviewStatusCapacityTitle;
    this.textviewStatusCapacityValue = textviewStatusCapacityValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkWidgetCameraConfigStorageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UxsdkWidgetCameraConfigStorageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.uxsdk_widget_camera_config_storage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UxsdkWidgetCameraConfigStorageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier;
      Barrier barrier = ViewBindings.findChildViewById(rootView, id);
      if (barrier == null) {
        break missingId;
      }

      id = R.id.imageview_storage_icon;
      ImageView imageviewStorageIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageviewStorageIcon == null) {
        break missingId;
      }

      id = R.id.textview_camera_color;
      TextView textviewCameraColor = ViewBindings.findChildViewById(rootView, id);
      if (textviewCameraColor == null) {
        break missingId;
      }

      id = R.id.textview_image_format;
      TextView textviewImageFormat = ViewBindings.findChildViewById(rootView, id);
      if (textviewImageFormat == null) {
        break missingId;
      }

      id = R.id.textview_status_capacity_title;
      TextView textviewStatusCapacityTitle = ViewBindings.findChildViewById(rootView, id);
      if (textviewStatusCapacityTitle == null) {
        break missingId;
      }

      id = R.id.textview_status_capacity_value;
      TextView textviewStatusCapacityValue = ViewBindings.findChildViewById(rootView, id);
      if (textviewStatusCapacityValue == null) {
        break missingId;
      }

      return new UxsdkWidgetCameraConfigStorageBinding((ConstraintLayout) rootView, barrier,
          imageviewStorageIcon, textviewCameraColor, textviewImageFormat,
          textviewStatusCapacityTitle, textviewStatusCapacityValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
