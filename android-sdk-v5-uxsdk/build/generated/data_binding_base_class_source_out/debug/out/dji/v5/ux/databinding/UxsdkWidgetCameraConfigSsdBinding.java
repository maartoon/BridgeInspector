// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.constraintlayout.widget.Barrier;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkWidgetCameraConfigSsdBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final ImageView imageviewSsdIcon;

  @NonNull
  public final ImageView imageviewSsdStatusIcon;

  @NonNull
  public final TextView textviewFormatInfo;

  @NonNull
  public final TextView textviewSsdCapacityLicense;

  @NonNull
  public final TextView textviewSsdCapacityValue;

  @NonNull
  public final TextView textviewSsdClipInfo;

  @NonNull
  public final TextView textviewStatusInfo;

  private UxsdkWidgetCameraConfigSsdBinding(@NonNull View rootView, @NonNull Barrier barrier,
      @NonNull ImageView imageviewSsdIcon, @NonNull ImageView imageviewSsdStatusIcon,
      @NonNull TextView textviewFormatInfo, @NonNull TextView textviewSsdCapacityLicense,
      @NonNull TextView textviewSsdCapacityValue, @NonNull TextView textviewSsdClipInfo,
      @NonNull TextView textviewStatusInfo) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.imageviewSsdIcon = imageviewSsdIcon;
    this.imageviewSsdStatusIcon = imageviewSsdStatusIcon;
    this.textviewFormatInfo = textviewFormatInfo;
    this.textviewSsdCapacityLicense = textviewSsdCapacityLicense;
    this.textviewSsdCapacityValue = textviewSsdCapacityValue;
    this.textviewSsdClipInfo = textviewSsdClipInfo;
    this.textviewStatusInfo = textviewStatusInfo;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkWidgetCameraConfigSsdBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.uxsdk_widget_camera_config_ssd, parent);
    return bind(parent);
  }

  @NonNull
  public static UxsdkWidgetCameraConfigSsdBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier;
      Barrier barrier = ViewBindings.findChildViewById(rootView, id);
      if (barrier == null) {
        break missingId;
      }

      id = R.id.imageview_ssd_icon;
      ImageView imageviewSsdIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageviewSsdIcon == null) {
        break missingId;
      }

      id = R.id.imageview_ssd_status_icon;
      ImageView imageviewSsdStatusIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageviewSsdStatusIcon == null) {
        break missingId;
      }

      id = R.id.textview_format_info;
      TextView textviewFormatInfo = ViewBindings.findChildViewById(rootView, id);
      if (textviewFormatInfo == null) {
        break missingId;
      }

      id = R.id.textview_ssd_capacity_license;
      TextView textviewSsdCapacityLicense = ViewBindings.findChildViewById(rootView, id);
      if (textviewSsdCapacityLicense == null) {
        break missingId;
      }

      id = R.id.textview_ssd_capacity_value;
      TextView textviewSsdCapacityValue = ViewBindings.findChildViewById(rootView, id);
      if (textviewSsdCapacityValue == null) {
        break missingId;
      }

      id = R.id.textview_ssd_clip_info;
      TextView textviewSsdClipInfo = ViewBindings.findChildViewById(rootView, id);
      if (textviewSsdClipInfo == null) {
        break missingId;
      }

      id = R.id.textview_status_info;
      TextView textviewStatusInfo = ViewBindings.findChildViewById(rootView, id);
      if (textviewStatusInfo == null) {
        break missingId;
      }

      return new UxsdkWidgetCameraConfigSsdBinding(rootView, barrier, imageviewSsdIcon,
          imageviewSsdStatusIcon, textviewFormatInfo, textviewSsdCapacityLicense,
          textviewSsdCapacityValue, textviewSsdClipInfo, textviewStatusInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
