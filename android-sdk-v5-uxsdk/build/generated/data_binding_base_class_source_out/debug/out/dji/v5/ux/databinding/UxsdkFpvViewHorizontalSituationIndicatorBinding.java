// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import dji.v5.ux.core.ui.hsi.HSIView;
import dji.v5.ux.core.widget.hsi.AttitudeDisplayWidget;
import dji.v5.ux.core.widget.hsi.GimbalPitchBarWidget;
import dji.v5.ux.core.widget.hsi.SpeedDisplayWidget;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkFpvViewHorizontalSituationIndicatorBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Space anchor;

  @NonNull
  public final AttitudeDisplayWidget pfdHsiAttitudeDisplay;

  @NonNull
  public final GimbalPitchBarWidget pfdHsiGimbalPitchDisplay;

  @NonNull
  public final SpeedDisplayWidget pfdHsiSpeedDisplay;

  @NonNull
  public final HSIView pfdHsiView;

  private UxsdkFpvViewHorizontalSituationIndicatorBinding(@NonNull RelativeLayout rootView,
      @NonNull Space anchor, @NonNull AttitudeDisplayWidget pfdHsiAttitudeDisplay,
      @NonNull GimbalPitchBarWidget pfdHsiGimbalPitchDisplay,
      @NonNull SpeedDisplayWidget pfdHsiSpeedDisplay, @NonNull HSIView pfdHsiView) {
    this.rootView = rootView;
    this.anchor = anchor;
    this.pfdHsiAttitudeDisplay = pfdHsiAttitudeDisplay;
    this.pfdHsiGimbalPitchDisplay = pfdHsiGimbalPitchDisplay;
    this.pfdHsiSpeedDisplay = pfdHsiSpeedDisplay;
    this.pfdHsiView = pfdHsiView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkFpvViewHorizontalSituationIndicatorBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UxsdkFpvViewHorizontalSituationIndicatorBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.uxsdk_fpv_view_horizontal_situation_indicator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UxsdkFpvViewHorizontalSituationIndicatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.anchor;
      Space anchor = ViewBindings.findChildViewById(rootView, id);
      if (anchor == null) {
        break missingId;
      }

      id = R.id.pfd_hsi_attitude_display;
      AttitudeDisplayWidget pfdHsiAttitudeDisplay = ViewBindings.findChildViewById(rootView, id);
      if (pfdHsiAttitudeDisplay == null) {
        break missingId;
      }

      id = R.id.pfd_hsi_gimbal_pitch_display;
      GimbalPitchBarWidget pfdHsiGimbalPitchDisplay = ViewBindings.findChildViewById(rootView, id);
      if (pfdHsiGimbalPitchDisplay == null) {
        break missingId;
      }

      id = R.id.pfd_hsi_speed_display;
      SpeedDisplayWidget pfdHsiSpeedDisplay = ViewBindings.findChildViewById(rootView, id);
      if (pfdHsiSpeedDisplay == null) {
        break missingId;
      }

      id = R.id.pfd_hsi_view;
      HSIView pfdHsiView = ViewBindings.findChildViewById(rootView, id);
      if (pfdHsiView == null) {
        break missingId;
      }

      return new UxsdkFpvViewHorizontalSituationIndicatorBinding((RelativeLayout) rootView, anchor,
          pfdHsiAttitudeDisplay, pfdHsiGimbalPitchDisplay, pfdHsiSpeedDisplay, pfdHsiView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
