// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import dji.v5.ux.R;
import dji.v5.ux.remotecontroller.calibration.CalibrationRadioButton;
import dji.v5.ux.remotecontroller.calibration.SmartControllerCalibrationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkSettingUiRcSmartControllerCalibrationBinding implements ViewBinding {
  @NonNull
  private final SmartControllerCalibrationView rootView;

  @NonNull
  public final ViewPager calibrationPages;

  @NonNull
  public final Button fpvRcsettingCeleBtn;

  @NonNull
  public final View scCalibrationBtnDivider;

  @NonNull
  public final RadioGroup settingUiRcCalibrationRg;

  @NonNull
  public final CalibrationRadioButton settingUiRcCalibrationStickRg;

  @NonNull
  public final CalibrationRadioButton settingUiRcCalibrationWheelRg;

  private UxsdkSettingUiRcSmartControllerCalibrationBinding(
      @NonNull SmartControllerCalibrationView rootView, @NonNull ViewPager calibrationPages,
      @NonNull Button fpvRcsettingCeleBtn, @NonNull View scCalibrationBtnDivider,
      @NonNull RadioGroup settingUiRcCalibrationRg,
      @NonNull CalibrationRadioButton settingUiRcCalibrationStickRg,
      @NonNull CalibrationRadioButton settingUiRcCalibrationWheelRg) {
    this.rootView = rootView;
    this.calibrationPages = calibrationPages;
    this.fpvRcsettingCeleBtn = fpvRcsettingCeleBtn;
    this.scCalibrationBtnDivider = scCalibrationBtnDivider;
    this.settingUiRcCalibrationRg = settingUiRcCalibrationRg;
    this.settingUiRcCalibrationStickRg = settingUiRcCalibrationStickRg;
    this.settingUiRcCalibrationWheelRg = settingUiRcCalibrationWheelRg;
  }

  @Override
  @NonNull
  public SmartControllerCalibrationView getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkSettingUiRcSmartControllerCalibrationBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UxsdkSettingUiRcSmartControllerCalibrationBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.uxsdk_setting_ui_rc_smart_controller_calibration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UxsdkSettingUiRcSmartControllerCalibrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calibration_pages;
      ViewPager calibrationPages = ViewBindings.findChildViewById(rootView, id);
      if (calibrationPages == null) {
        break missingId;
      }

      id = R.id.fpv_rcsetting_cele_btn;
      Button fpvRcsettingCeleBtn = ViewBindings.findChildViewById(rootView, id);
      if (fpvRcsettingCeleBtn == null) {
        break missingId;
      }

      id = R.id.sc_calibration_btn_divider;
      View scCalibrationBtnDivider = ViewBindings.findChildViewById(rootView, id);
      if (scCalibrationBtnDivider == null) {
        break missingId;
      }

      id = R.id.setting_ui_rc_calibration_rg;
      RadioGroup settingUiRcCalibrationRg = ViewBindings.findChildViewById(rootView, id);
      if (settingUiRcCalibrationRg == null) {
        break missingId;
      }

      id = R.id.setting_ui_rc_calibration_stick_rg;
      CalibrationRadioButton settingUiRcCalibrationStickRg = ViewBindings.findChildViewById(rootView, id);
      if (settingUiRcCalibrationStickRg == null) {
        break missingId;
      }

      id = R.id.setting_ui_rc_calibration_wheel_rg;
      CalibrationRadioButton settingUiRcCalibrationWheelRg = ViewBindings.findChildViewById(rootView, id);
      if (settingUiRcCalibrationWheelRg == null) {
        break missingId;
      }

      return new UxsdkSettingUiRcSmartControllerCalibrationBinding((SmartControllerCalibrationView) rootView,
          calibrationPages, fpvRcsettingCeleBtn, scCalibrationBtnDivider, settingUiRcCalibrationRg,
          settingUiRcCalibrationStickRg, settingUiRcCalibrationWheelRg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
