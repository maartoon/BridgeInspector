// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import dji.v5.ux.remotecontroller.calibration.DJICalProgressBar;
import dji.v5.ux.remotecontroller.calibration.wheel.WheelCalibrationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkSettingUiRcSmartControllerWheelCalibrationViewBinding implements ViewBinding {
  @NonNull
  private final WheelCalibrationView rootView;

  @NonNull
  public final ImageView fpvRcsettingCeleItemLeftImg;

  @NonNull
  public final DJICalProgressBar fpvRcsettingCeleItemPgb;

  @NonNull
  public final ImageView fpvRcsettingCeleItemRightImg;

  @NonNull
  public final ImageView fpvRcsettingCeleItemRightWheelLeftImg;

  @NonNull
  public final DJICalProgressBar fpvRcsettingCeleItemRightWheelPgb;

  @NonNull
  public final ImageView fpvRcsettingCeleItemRightWheelRightImg;

  private UxsdkSettingUiRcSmartControllerWheelCalibrationViewBinding(
      @NonNull WheelCalibrationView rootView, @NonNull ImageView fpvRcsettingCeleItemLeftImg,
      @NonNull DJICalProgressBar fpvRcsettingCeleItemPgb,
      @NonNull ImageView fpvRcsettingCeleItemRightImg,
      @NonNull ImageView fpvRcsettingCeleItemRightWheelLeftImg,
      @NonNull DJICalProgressBar fpvRcsettingCeleItemRightWheelPgb,
      @NonNull ImageView fpvRcsettingCeleItemRightWheelRightImg) {
    this.rootView = rootView;
    this.fpvRcsettingCeleItemLeftImg = fpvRcsettingCeleItemLeftImg;
    this.fpvRcsettingCeleItemPgb = fpvRcsettingCeleItemPgb;
    this.fpvRcsettingCeleItemRightImg = fpvRcsettingCeleItemRightImg;
    this.fpvRcsettingCeleItemRightWheelLeftImg = fpvRcsettingCeleItemRightWheelLeftImg;
    this.fpvRcsettingCeleItemRightWheelPgb = fpvRcsettingCeleItemRightWheelPgb;
    this.fpvRcsettingCeleItemRightWheelRightImg = fpvRcsettingCeleItemRightWheelRightImg;
  }

  @Override
  @NonNull
  public WheelCalibrationView getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkSettingUiRcSmartControllerWheelCalibrationViewBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UxsdkSettingUiRcSmartControllerWheelCalibrationViewBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.uxsdk_setting_ui_rc_smart_controller_wheel_calibration_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UxsdkSettingUiRcSmartControllerWheelCalibrationViewBinding bind(
      @NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fpv_rcsetting_cele_item_left_img;
      ImageView fpvRcsettingCeleItemLeftImg = ViewBindings.findChildViewById(rootView, id);
      if (fpvRcsettingCeleItemLeftImg == null) {
        break missingId;
      }

      id = R.id.fpv_rcsetting_cele_item_pgb;
      DJICalProgressBar fpvRcsettingCeleItemPgb = ViewBindings.findChildViewById(rootView, id);
      if (fpvRcsettingCeleItemPgb == null) {
        break missingId;
      }

      id = R.id.fpv_rcsetting_cele_item_right_img;
      ImageView fpvRcsettingCeleItemRightImg = ViewBindings.findChildViewById(rootView, id);
      if (fpvRcsettingCeleItemRightImg == null) {
        break missingId;
      }

      id = R.id.fpv_rcsetting_cele_item_right_wheel_left_img;
      ImageView fpvRcsettingCeleItemRightWheelLeftImg = ViewBindings.findChildViewById(rootView, id);
      if (fpvRcsettingCeleItemRightWheelLeftImg == null) {
        break missingId;
      }

      id = R.id.fpv_rcsetting_cele_item_right_wheel_pgb;
      DJICalProgressBar fpvRcsettingCeleItemRightWheelPgb = ViewBindings.findChildViewById(rootView, id);
      if (fpvRcsettingCeleItemRightWheelPgb == null) {
        break missingId;
      }

      id = R.id.fpv_rcsetting_cele_item_right_wheel_right_img;
      ImageView fpvRcsettingCeleItemRightWheelRightImg = ViewBindings.findChildViewById(rootView, id);
      if (fpvRcsettingCeleItemRightWheelRightImg == null) {
        break missingId;
      }

      return new UxsdkSettingUiRcSmartControllerWheelCalibrationViewBinding((WheelCalibrationView) rootView,
          fpvRcsettingCeleItemLeftImg, fpvRcsettingCeleItemPgb, fpvRcsettingCeleItemRightImg,
          fpvRcsettingCeleItemRightWheelLeftImg, fpvRcsettingCeleItemRightWheelPgb,
          fpvRcsettingCeleItemRightWheelRightImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
