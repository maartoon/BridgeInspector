// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkGimbalFineTuneBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final ImageView fpvGimbalFinetuneMinusImg;

  @NonNull
  public final ImageView fpvGimbalFinetunePlusImg;

  @NonNull
  public final TextView fpvGimbalFinetuneValueTv;

  @NonNull
  public final TextView fpvGimbalOkBtn;

  @NonNull
  public final TextView fpvLeftTv;

  @NonNull
  public final TextView fpvMiddleTv;

  @NonNull
  public final TextView fpvRightTv;

  private UxsdkGimbalFineTuneBinding(@NonNull View rootView,
      @NonNull ImageView fpvGimbalFinetuneMinusImg, @NonNull ImageView fpvGimbalFinetunePlusImg,
      @NonNull TextView fpvGimbalFinetuneValueTv, @NonNull TextView fpvGimbalOkBtn,
      @NonNull TextView fpvLeftTv, @NonNull TextView fpvMiddleTv, @NonNull TextView fpvRightTv) {
    this.rootView = rootView;
    this.fpvGimbalFinetuneMinusImg = fpvGimbalFinetuneMinusImg;
    this.fpvGimbalFinetunePlusImg = fpvGimbalFinetunePlusImg;
    this.fpvGimbalFinetuneValueTv = fpvGimbalFinetuneValueTv;
    this.fpvGimbalOkBtn = fpvGimbalOkBtn;
    this.fpvLeftTv = fpvLeftTv;
    this.fpvMiddleTv = fpvMiddleTv;
    this.fpvRightTv = fpvRightTv;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkGimbalFineTuneBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.uxsdk_gimbal_fine_tune, parent);
    return bind(parent);
  }

  @NonNull
  public static UxsdkGimbalFineTuneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fpv_gimbal_finetune_minus_img;
      ImageView fpvGimbalFinetuneMinusImg = ViewBindings.findChildViewById(rootView, id);
      if (fpvGimbalFinetuneMinusImg == null) {
        break missingId;
      }

      id = R.id.fpv_gimbal_finetune_plus_img;
      ImageView fpvGimbalFinetunePlusImg = ViewBindings.findChildViewById(rootView, id);
      if (fpvGimbalFinetunePlusImg == null) {
        break missingId;
      }

      id = R.id.fpv_gimbal_finetune_value_tv;
      TextView fpvGimbalFinetuneValueTv = ViewBindings.findChildViewById(rootView, id);
      if (fpvGimbalFinetuneValueTv == null) {
        break missingId;
      }

      id = R.id.fpv_gimbal_ok_btn;
      TextView fpvGimbalOkBtn = ViewBindings.findChildViewById(rootView, id);
      if (fpvGimbalOkBtn == null) {
        break missingId;
      }

      id = R.id.fpv_left_tv;
      TextView fpvLeftTv = ViewBindings.findChildViewById(rootView, id);
      if (fpvLeftTv == null) {
        break missingId;
      }

      id = R.id.fpv_middle_tv;
      TextView fpvMiddleTv = ViewBindings.findChildViewById(rootView, id);
      if (fpvMiddleTv == null) {
        break missingId;
      }

      id = R.id.fpv_right_tv;
      TextView fpvRightTv = ViewBindings.findChildViewById(rootView, id);
      if (fpvRightTv == null) {
        break missingId;
      }

      return new UxsdkGimbalFineTuneBinding(rootView, fpvGimbalFinetuneMinusImg,
          fpvGimbalFinetunePlusImg, fpvGimbalFinetuneValueTv, fpvGimbalOkBtn, fpvLeftTv,
          fpvMiddleTv, fpvRightTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
