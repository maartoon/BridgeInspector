// Generated by view binder compiler. Do not edit!
package dji.v5.ux.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import dji.v5.ux.R;
import dji.v5.ux.cameracore.widget.cameracapture.CameraCaptureWidget;
import dji.v5.ux.cameracore.widget.cameracontrols.camerasettingsindicator.CameraSettingsMenuIndicatorWidget;
import dji.v5.ux.cameracore.widget.cameracontrols.exposuresettingsindicator.ExposureSettingsIndicatorWidget;
import dji.v5.ux.cameracore.widget.cameracontrols.photovideoswitch.PhotoVideoSwitchWidget;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UxsdkWidgetCameraControlsBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final CameraCaptureWidget widgetCameraControlCameraCapture;

  @NonNull
  public final ExposureSettingsIndicatorWidget widgetCameraControlCameraExposureSettings;

  @NonNull
  public final CameraSettingsMenuIndicatorWidget widgetCameraControlCameraSettingsMenu;

  @NonNull
  public final PhotoVideoSwitchWidget widgetCameraControlPhotoVideoSwitch;

  private UxsdkWidgetCameraControlsBinding(@NonNull View rootView,
      @NonNull CameraCaptureWidget widgetCameraControlCameraCapture,
      @NonNull ExposureSettingsIndicatorWidget widgetCameraControlCameraExposureSettings,
      @NonNull CameraSettingsMenuIndicatorWidget widgetCameraControlCameraSettingsMenu,
      @NonNull PhotoVideoSwitchWidget widgetCameraControlPhotoVideoSwitch) {
    this.rootView = rootView;
    this.widgetCameraControlCameraCapture = widgetCameraControlCameraCapture;
    this.widgetCameraControlCameraExposureSettings = widgetCameraControlCameraExposureSettings;
    this.widgetCameraControlCameraSettingsMenu = widgetCameraControlCameraSettingsMenu;
    this.widgetCameraControlPhotoVideoSwitch = widgetCameraControlPhotoVideoSwitch;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static UxsdkWidgetCameraControlsBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.uxsdk_widget_camera_controls, parent);
    return bind(parent);
  }

  @NonNull
  public static UxsdkWidgetCameraControlsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.widget_camera_control_camera_capture;
      CameraCaptureWidget widgetCameraControlCameraCapture = ViewBindings.findChildViewById(rootView, id);
      if (widgetCameraControlCameraCapture == null) {
        break missingId;
      }

      id = R.id.widget_camera_control_camera_exposure_settings;
      ExposureSettingsIndicatorWidget widgetCameraControlCameraExposureSettings = ViewBindings.findChildViewById(rootView, id);
      if (widgetCameraControlCameraExposureSettings == null) {
        break missingId;
      }

      id = R.id.widget_camera_control_camera_settings_menu;
      CameraSettingsMenuIndicatorWidget widgetCameraControlCameraSettingsMenu = ViewBindings.findChildViewById(rootView, id);
      if (widgetCameraControlCameraSettingsMenu == null) {
        break missingId;
      }

      id = R.id.widget_camera_control_photo_video_switch;
      PhotoVideoSwitchWidget widgetCameraControlPhotoVideoSwitch = ViewBindings.findChildViewById(rootView, id);
      if (widgetCameraControlPhotoVideoSwitch == null) {
        break missingId;
      }

      return new UxsdkWidgetCameraControlsBinding(rootView, widgetCameraControlCameraCapture,
          widgetCameraControlCameraExposureSettings, widgetCameraControlCameraSettingsMenu,
          widgetCameraControlPhotoVideoSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
